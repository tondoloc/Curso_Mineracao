paste(1:10, collapse = "& \\quad ")
install.packages("pacman")
pacman::p_load(rgl)
x <- runif(100,0,100) # 100 pontos dist uniforme
y <- runif(100,0,80) # mesmo para y
z <- y = runif(100,0,20) # add valores aleatorios para criar z add perturbação
z <- y + runif(100,0,20) # add valores aleatorios para criar z add perturbação
# diagrama de dispersao
plot(x,y)
plot(x,z)
plot(y,z)
#projetar uma dimensao mais baixa
plot3d(x,y,z)
pacman::p_load(rgl)
install.packages("rgl")
install.packages("xquartz")
pacman::p_load(rgl)
#projetar uma dimensao mais baixa
plot3d(x,y,z)
pacman::p_load(psych)
pacman::p_load(GPArotation)
# Limpar console
cat("\014")  # CTRL+L
pacman::p_load(pcaMethods)
library(datasets)
setwd("~/Documentos/Mineração/arquivos_de_exercicios_ciencia_dados_fundamentos_mineracao/Cap.2/02_03")
# Ler big5.csv na área de trabalho
b5 <- read.csv("~/Desktop/b5.csv", header = T)
# Ler big5.csv na área de trabalho
b5 <- read.csv("~//home/catia/Documentos/Mineração/arquivos_de_exercicios_ciencia_dados_fundamentos_mineracao/Cap.2/02_03/b5.csv", header = T)
# Ler big5.csv na área de trabalho
b5 <- read.csv("~/home/catia/Documentos/Mineração/arquivos_de_exercicios_ciencia_dados_fundamentos_mineracao/Cap.2/02_03/b5.csv", header = T)
# Ler big5.csv na área de trabalho
b5 <- read.csv("~/Documentos/Mineração/arquivos_de_exercicios_ciencia_dados_fundamentos_mineracao/Cap.2/02_03/b5.csv", header = T)
# Ler big5.csv na área de trabalho
b5 <- read.csv("~/Documentos/Mineração/arquivos_de_exercicios_ciencia_dados_fundamentos_mineracao/Cap.2/02_03/Data/b5.csv", header = T)
# Ler big5.csv na área de trabalho
b5 <- read.csv("~/home/catia/Documentos/Mineração/arquivos_de_exercicios_ciencia_dados_fundamentos_mineracao/Cap.2/02_03/Data/b5.csv", header = T)
setwd("~/Documentos/Mineração/arquivos_de_exercicios_ciencia_dados_fundamentos_mineracao/Cap.2/02_03")
# Ler big5.csv na área de trabalho
b5 <- read.csv("~/Documentos/Mineração/arquivos_de_exercicios_ciencia_dados_fundamentos_mineracao/Cap.2/02_03/Data/b5.csv", header = T)
# Verificar se o pacman está instalado
# Se não estiver, instalá-lo
if (!require("pacman")) install.packages("pacman")
p_load(psych)        # Carregar pacote psych
p_depends(psych)     # Verificar dependências do psych
p_load(GPArotation)  # Instalar dependência
# Ler big5.csv na área de trabalho
b5 <- read.csv("~/Documentos/Mineração/arquivos_de_exercicios_ciencia_dados_fundamentos_mineracao/Cap.2/02_03/Data/b5.csv", header = T)
library(readr)
b5 <- read_csv("data/b5.csv")
View(b5)
colnames(b5)  # Obter nome das colunas
boxplot(b5)   # Diagramas de caixa das variáveis do Big 5
# Primeira PCA sem rotação, especificar 5 fatores
pc0 <- principal(b5, nfactors = 5) # do pacote psych fornece + graficos
pc0  # Verificar resultados
# Segunda PCA com rotação oblimin (oblíqua) aqui os comp são rotacionados
pc1 <- principal(b5, nfactors = 5, rotate = "oblimin")
pc1  # Verificar resultados
# Gerar gráfico da posição das variáveis nos componentes
plot(pc1)
# Gerar gráfico da posição das variáveis nos componentes
plot(pc1)
# Limpar espaço de trabalho
rm(list = ls())
# Limpar pacotes
p_unload(psych, GPArotation)
# Limpar gráficos
dev.off()
# Limpar console
cat("\014")  # CTRL+L
library(readr)
ClusterData <- read_csv("~/Documentos/Mineração/arquivos_de_exercicios_ciencia_dados_fundamentos_mineracao/Cap.3/03_03/ClusterData.csv")
View(ClusterData)
colnames(states)
# Ler CSV
states <- read.csv("~/Desktop/ClusterData.csv", header = T)
# Ler CSV
states <- read.csv("~/home/catia/Documentos/Mineração/arquivos_de_/ClusterData.csv", header = T)
# Ler CSV
states <- read.csv("~/home/catia/Documentos/Mineração/arquivos_de_exercicios_ciencia_dados_fundamentos_mineracao/Cap.3/03_03/ClusterData.csv", header = T)
# Ler CSV
states <- read.csv("~/Documentos/Mineração/arquivos_de_exercicios_ciencia_dados_fundamentos_mineracao/Cap.3/03_03/ClusterData.csv", header = T)
colnames(states)
# Salvar apenas dados numéricos sem nomes de estadoe e outros
st <- states[, 3:27]
row.names(st) <- states[, 2]
colnames(st)
# Apenas dados de pesquisas sobre esportes
sports <- st[, 8:11]
head(sports)
# Criar matriz de distâncias
d <- dist(st)
# Agrupamento hierárquico
c <- hclust(d)
c # Informações sobre o agrupamento
# Gerar dendrograma dos agrupamentos
plot(c, main = "Cluster with All Searches and Personality")
# Ou aninhar comandos em uma linha (para dados esportivos)
plot(hclust(dist(sports)), main = "Sports Searches")
row.names(st)
row.names(st)
colnames(st)
# Salvar apenas dados numéricos sem nomes de estadoe e outros
st <- states[, 3:27]
states[, 2]
states[, 3:27]
states[, 2]
colnames(states)
